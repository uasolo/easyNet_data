#LAYERS AND CONNECTIONS
create string_layer in_layer
in_layer set_pretty_name String Input

create strength_layer normalized_bigrams
normalized_bigrams add_facet layer_mem_nonzero_count_2is_t
normalized_bigrams add_facet copy_transfer
normalized_bigrams set_lag 0
normalized_bigrams set_pretty_name Bigram Input

create iac_layer bigrams
bigrams set_pretty_name Bigrams IAC

create iac_layer words
words set_pretty_name Words IAC

create sparse_excitation_fan_connection bwc
create connection wbc
create connection lato

#DATAFRAME
#this will create column_rep representations for each column
create dataframe_for_reps bigramf
bigramf load Databases/bigrams_lowercase.eNd
create dataframe_for_reps vocab
vocab load $vocabulary_file

#REPRESENTATIONS
create string_representation str_rep
create string_representation bg1_str_rep
create string_representation bg2_str_rep
create string_representation bg3_str_rep
create string_representation bg4_str_rep

create scale_conversion rescale
rescale set_source (bigramf column_rep bigram keyed_representation)
rescale set_target (rescale get_base_target)

#create equiv_conversion igscale
#igscale set_source (rescale get_target)
#igscale set_target (bigramf column_rep bigram keyed_representation)

#ASSIGN LAYER REPRESENTATIONS
in_layer represent str_rep
normalized_bigrams represent (rescale get_target)
bigrams represent (rescale get_target)
words represent (vocab column_rep Word keyed_representation)
words set_resting_level (vocab column_rep Rest)

#CONVERSIONS
#1 - from str_rep to bg1_str_rep

#1a adjacent bigrams
create regex_side_effect_conversion list_OB1s
list_OB1s set_source str_rep
list_OB1s set_target bg1_str_rep
list_OB1s add ^(.)(.)(.)(.)(.)(.)(.)(.) \2\3\4\5\6\7\8 \1\2
list_OB1s add ^(.)(.)(.)(.)(.)(.)(.) \2\3\4\5\6\7 \1\2
list_OB1s add ^(.)(.)(.)(.)(.)(.) \2\3\4\5\6 \1\2
list_OB1s add ^(.)(.)(.)(.)(.) \2\3\4\5 \1\2
list_OB1s add ^(.)(.)(.)(.) \2\3\4 \1\2
list_OB1s add ^(.)(.)(.) \2\3 \1\2
list_OB1s add ^(.)(.) \2 \1\2

#1b two-apart bigrams
create regex_side_effect_conversion list_OB2s
list_OB2s set_source str_rep
list_OB2s set_target bg2_str_rep
list_OB2s add ^(.)(.)(.)(.)(.)(.)(.)(.) \2\3\4\5\6\7\8 \1\3
list_OB2s add ^(.)(.)(.)(.)(.)(.)(.) \2\3\4\5\6\7 \1\3
list_OB2s add ^(.)(.)(.)(.)(.)(.) \2\3\4\5\6 \1\3
list_OB2s add ^(.)(.)(.)(.)(.) \2\3\4\5 \1\3
list_OB2s add ^(.)(.)(.)(.) \2\3\4 \1\3
list_OB2s add ^(.)(.)(.) \2\3 \1\3

#1b three-apart bigrams
create regex_side_effect_conversion list_OB3s
list_OB3s set_source str_rep
list_OB3s set_target bg3_str_rep
list_OB3s add ^(.)(.)(.)(.)(.)(.)(.)(.) \2\3\4\5\6\7\8 \1\4
list_OB3s add ^(.)(.)(.)(.)(.)(.)(.) \2\3\4\5\6\7 \1\4
list_OB3s add ^(.)(.)(.)(.)(.)(.) \2\3\4\5\6 \1\4
list_OB3s add ^(.)(.)(.)(.)(.) \2\3\4\5 \1\4
list_OB3s add ^(.)(.)(.)(.) \2\3\4 \1\4

#1c adjacent reversed open bigrams
create regex_side_effect_conversion list_OB4s
list_OB4s set_source str_rep
list_OB4s set_target bg4_str_rep
list_OB4s add ^(.)(.)(.)(.)(.)(.)(.)(.) \2\3\4\5\6\7\8 \2\1
list_OB4s add ^(.)(.)(.)(.)(.)(.)(.) \2\3\4\5\6\7 \2\1
list_OB4s add ^(.)(.)(.)(.)(.)(.) \2\3\4\5\6 \2\1
list_OB4s add ^(.)(.)(.)(.)(.) \2\3\4\5 \2\1
list_OB4s add ^(.)(.)(.)(.) \2\3\4 \2\1
list_OB4s add ^(.)(.)(.) \2\3 \2\1
list_OB4s add ^(.)(.) \2 \2\1

#2 - chunk up the bigram lists

#2a - adjacent bigrams
create string_split bg1split
bg1split set_source bg1_str_rep
bg1split set_chunk 2

#2b - two-apart bigrams
create string_split bg2split
bg2split set_source bg2_str_rep
bg2split set_chunk 2

#2c - three-apart bigrams
create string_split bg3split
bg3split set_source bg3_str_rep
bg3split set_chunk 2

#2d - adjacent reversed open bigrams
create string_split bg4split
bg4split set_source bg4_str_rep
bg4split set_chunk 2

#3 - link resulting bigrams to those created by bigramf df 

#3a - adjacent bigrams
create equiv_conversion bg1tobgf
bg1tobgf set_target (bigramf column_rep bigram string_representation)
bg1tobgf set_source (bg1split get_target)

#3b - from (bg4split get_target) to (bigramf column_rep bigram keyed_representation)
create equiv_conversion bg2tobgf
bg2tobgf set_target (bigramf column_rep bigram string_representation)
bg2tobgf set_source (bg2split get_target)

#3c - from (bg4split get_target) to (bigramf column_rep bigram keyed_representation)
create equiv_conversion bg3tobgf
bg3tobgf set_target (bigramf column_rep bigram string_representation)
bg3tobgf set_source (bg3split get_target)

#3d - from (bg4split get_target) to (bigramf column_rep bigram keyed_representation)
create equiv_conversion bg4tobgf
bg4tobgf set_target (bigramf column_rep bigram string_representation)
bg4tobgf set_source (bg4split get_target)

#4 - from(vocab column_rep Word string_representation) to (str_rep )
create equiv_conversion wordtostrc
wordtostrc set_source (vocab column_rep Word string_representation)
wordtostrc set_target str_rep 


create equiv_conversion strtowordc
strtowordc set_source str_rep 
strtowordc set_target (vocab column_rep Word string_representation)

#5 create scale conversions to allow different strengths for the different categories of OBs

create scale_conversion rescale1
rescale1 set_source (bigramf column_rep bigram keyed_representation)
rescale1 set_target (rescale get_target) 
rescale1 set_auto_use 0

create scale_conversion rescale2
rescale2 set_source (bigramf column_rep bigram keyed_representation)
rescale2 set_target (rescale get_target) 
rescale2 set_auto_use 0

create scale_conversion rescale3
rescale3 set_source (bigramf column_rep bigram keyed_representation)
rescale3 set_target (rescale get_target) 
rescale3 set_auto_use 0

create scale_conversion rescale4
rescale4 set_source (bigramf column_rep bigram keyed_representation)
rescale4 set_target (rescale get_target) 
rescale4 set_auto_use 0

# manually create conversions for each ibc connection
# then hook up

create conversion_chain chain1
chain1 add_link_back list_OB1s
chain1 add_link_back bg1split
chain1 add_link_back bg1tobgf
chain1 add_link_back ((bigramf column_rep bigram keyed_representation) conversion_key)
chain1 add_link_back rescale1

create connection ibc1
ibc1 set_autoconnect 0
ibc1 attach in_layer
normalized_bigrams attach ibc1
ibc1 conv_connect chain1

create conversion_chain chain2
chain2 add_link_back list_OB2s
chain2 add_link_back bg2split
chain2 add_link_back bg2tobgf
chain2 add_link_back ((bigramf column_rep bigram keyed_representation) conversion_key)
chain2 add_link_back rescale2

create connection ibc2
ibc2 set_autoconnect 0
ibc2 attach in_layer
normalized_bigrams attach ibc2
ibc2 conv_connect chain2

create conversion_chain chain3
chain3 add_link_back list_OB3s
chain3 add_link_back bg3split
chain3 add_link_back bg3tobgf
chain3 add_link_back ((bigramf column_rep bigram keyed_representation) conversion_key)
chain3 add_link_back rescale3

create connection ibc3
ibc3 set_autoconnect 0
ibc3 attach in_layer
normalized_bigrams attach ibc3
ibc3 conv_connect chain3

create conversion_chain chain4
chain4 add_link_back list_OB4s
chain4 add_link_back bg4split
chain4 add_link_back bg4tobgf
chain4 add_link_back ((bigramf column_rep bigram keyed_representation) conversion_key)
chain4 add_link_back rescale4

create connection ibc4
ibc4 set_autoconnect 0
ibc4 attach in_layer
normalized_bigrams attach ibc4
ibc4 conv_connect chain4


lato autoconnect words words

create string_representation bg_str_rep
create regex_side_effect_conversion list_OBs
list_OBs set_source str_rep
list_OBs set_target bg_str_rep
list_OBs add ^(.)(.)(.)(.)(.)(.)(.)(.) \2\3\4\5\6\7\8 \1\2\1\3\1\4
list_OBs add ^(.)(.)(.)(.)(.)(.)(.) \2\3\4\5\6\7 \1\2\1\3\1\4
list_OBs add ^(.)(.)(.)(.)(.)(.) \2\3\4\5\6 \1\2\1\3\1\4
list_OBs add ^(.)(.)(.)(.)(.) \2\3\4\5 \1\2\1\3\1\4
list_OBs add ^(.)(.)(.)(.) \2\3\4 \1\2\1\3\1\4
list_OBs add ^(.)(.)(.) \2\3 \1\2\1\3
list_OBs add ^(.)(.) \2 \1\2

# create regex_side_effect_conversion list_all_OBs
# list_all_OBs set_source str_rep
# list_all_OBs set_target bg_str_rep
# # with reversed OBs
# list_all_OBs add ^(.)(.)(.)(.)(.)(.)(.)(.) \2\3\4\5\6\7\8 \1\2\1\3\1\4\2\1
# list_all_OBs add ^(.)(.)(.)(.)(.)(.)(.) \2\3\4\5\6\7 \1\2\1\3\1\4\2\1
# list_all_OBs add ^(.)(.)(.)(.)(.)(.) \2\3\4\5\6 \1\2\1\3\1\4\2\1
# list_all_OBs add ^(.)(.)(.)(.)(.) \2\3\4\5 \1\2\1\3\1\4\2\1
# list_all_OBs add ^(.)(.)(.)(.) \2\3\4 \1\2\1\3\1\4\2\1
# list_all_OBs add ^(.)(.)(.) \2\3 \1\2\1\3\2\1
# list_all_OBs add ^(.)(.) \2 \1\2\2\1

 
#2 - from  bg_str_rep to (bgsplit get_target)
create string_split bgsplit
bgsplit set_source bg_str_rep
bgsplit set_chunk 2

#3 - from (bgsplit get_target) to (bigramf column_rep bigram) 
create equiv_conversion bg1tobg2
bg1tobg2 set_target (bigramf column_rep bigram string_representation)
bg1tobg2 set_source (bgsplit get_target)

create equiv_conversion link
link set_source (rescale get_target)
link set_target (rescale get_base_target)

create conversion_chain extra
extra add_link_back ((vocab column_rep Word keyed_representation) conversion_unkey)
extra add_link_back wordtostrc 
extra add_link_back list_OBs
extra add_link_back bgsplit
extra add_link_back bg1tobg2
extra add_link_back ((bigramf column_rep bigram keyed_representation) conversion_key)
extra add_link_back rescale
extra add_link_back link

bwc set_autoconnect 0
bwc attach bigrams
words attach bwc 
bwc conv_fill extra
# ((rescale get_base_target) find_conversion (vocab column_rep Word keyed_representation))

#create equiv_conversion linkback
#linkback set_source (rescale get_base_target)
#linkback set_target (rescale get_target)

#create conversion_chain tdfchain
#tdfchain add_link_back link
#tdfchain add_link_back rescale
#tdfchain add_link_back ((bigramf column_rep bigram keyed_representation) conversion_key)
#tdfchain add_link_back bg1tobg2
#tdfchain add_link_back bgsplit
#tdfchain add_link_back list_OBs
#tdfchain add_link_back strtowordc 
#tdfchain add_link_back ((vocab column_rep Word keyed_representation) conversion_key)

list_OB1s set_auto_use 0
list_OB2s set_auto_use 0
list_OB3s set_auto_use 0
list_OB4s set_auto_use 0
#list_OBs set_auto_use 0
wbc autoconnect words bigrams
list_OB1s set_auto_use 1
list_OB2s set_auto_use 1
list_OB3s set_auto_use 1
list_OB4s set_auto_use 1
#list_OBs set_auto_use 1
#wbc set_autoconnect 0
#wbc attach words
#bigrams attach wbc 
#wbc conv_fill tdfchain

create connection diag
diag autoconnect normalized_bigrams bigrams

#OTHER STUFF
(default_model) add rescale rescale1 rescale2 rescale3 rescale4
(default_model) define_input orthographic str_rep in_layer

create best_above_threshold_observer identifier
identifier target words
(default_model) add identifier
create regex_observer lexical_decider
lexical_decider target identifier
lexical_decider add [^?]+ yes
 
(default_model) define_output lexical_decision lexical_decider

((default_model) parameters) load $parameter_file
