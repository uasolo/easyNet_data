create model bia

# LOAD DATABASES

# ## LETTER FEATURE REPRESENTATION
create dataframe_for_reps features_db
features_db load Databases/letter_features_no_blank.eNd

# ## ORTHOGRAPHY, PHONOLOGY, FREQUENCIES
create dataframe_for_reps dutch_vocab
create dataframe_for_reps english_vocab
create dataframe_for_reps languages_df
english_vocab load Databases/Vocab_files/english4U.eNd
dutch_vocab load Databases/Vocab_files/dutch4U.eNd
languages_df load Databases/Vocab_files/languages.eNd
#vocab load Databases/Vocab_files/clam.eNd
#vocab load Databases/Vocab_files/iaBLP.eNd
#vocab load Databases/Vocab_files/ia_AoA1.eNd


# LEXICAL ROUTE LAYERS

# ## FEATURE LAYER
create representation feat_rep
feat_rep type blocked_representation
feat_rep set_element (features_db column_rep features)
feat_rep number 4
create iac_layer features
features represent feat_rep

#create pattern _mask
#_mask set feat_rep 1P/0 2P/0 3P/0 4A/0 5P/0 6P/0  7A/0 8A/0 9P/0 10P/0 11A/0 12P/0 13P/0 14P/0 1P/1 2P/1 3P/1 4A/1 5P/1 6P/1 7A/1 8A/1 9P/1 10P/1 11A/1 12P/1 13P/1 14P/1 1P/2 2P/2 3P/2 4A/2 5P/2 6P/2 7A/2 8A/2 9P/2 10P/2 11A/2 12P/2 13P/2 14P/2 1P/3 2P/3 3P/3 4A/3 5P/3 6P/3 7A/3 8A/3 9P/3 10P/3 11A/3 12P/3 13P/3 14P/3

# ## LETTER LAYER
create representation letter_rep
letter_rep type blocked_representation
letter_rep set_element (features_db column_rep letter)
letter_rep number 4

create iac_layer letters
letters represent letter_rep

# ## ORTHOGRAPHIC LEXICON (LAYER)
create iac_layer dutch_words
dutch_words represent (dutch_vocab column_rep Word)

create iac_layer english_words
english_words represent (english_vocab column_rep Word)

create iac_layer languages
languages represent (languages_df column_rep Language)

# LEXICAL ROUTE CONNECTIONS

# ## FEATURE-LETTER
create connection flc
flc autoconnect features letters

# ## LETTER-ORTH
create string_split english_orth_str
create string_split dutch_orth_str
english_orth_str set_blank "
dutch_orth_str set_blank "
english_orth_str set_source (english_vocab column_rep Word string_representation)
dutch_orth_str set_source (dutch_vocab column_rep Word string_representation)

create dataframe_for_reps uplow
uplow load Databases/uplow.eNd

create equiv_conversion ortho_is_lower_b
ortho_is_lower_b set_source (uplow column_rep lower string_representation)
ortho_is_lower_b set_target (dutch_orth_str inner)
create equiv_conversion ortho_is_lower_f
ortho_is_lower_f set_target (uplow column_rep lower string_representation)
ortho_is_lower_f set_source (dutch_orth_str inner)

create equiv_conversion features_are_upper_f
features_are_upper_f set_source (features_db column_rep letter)
features_are_upper_f set_target (uplow column_rep upper)
create equiv_conversion features_are_upper_b
features_are_upper_b set_target (features_db column_rep letter)
features_are_upper_b set_source (uplow column_rep upper)

create equiv_conversion english_lettersc
english_lettersc set_target (uplow column_rep upper string_representation)
english_lettersc set_source (english_orth_str inner)

create equiv_conversion english_lettersc2
english_lettersc2 set_source (uplow column_rep upper string_representation)
english_lettersc2 set_target (english_orth_str inner)

create equiv_conversion dutch_lettersc
dutch_lettersc set_target (uplow column_rep upper string_representation)
dutch_lettersc set_source (dutch_orth_str inner)

create equiv_conversion dutch_lettersc2
dutch_lettersc2 set_source (uplow column_rep upper string_representation)
dutch_lettersc2 set_target (dutch_orth_str inner)

# these are the old solution to the problem of ensuring we can map from the string_rep to the feature
#    binary patterns; I suspect unnecessary with the above [UPDATE: CD -- tested script without the following, and conversions failed]
create parallel_conversion english_lopc
english_lopc set_source letter_rep
english_lopc set_target (english_orth_str get_target)
create parallel_conversion english_lopc2
english_lopc2 set_source (english_orth_str get_target)
english_lopc2 set_target letter_rep

create parallel_conversion dutch_lopc
dutch_lopc set_source letter_rep
dutch_lopc set_target (dutch_orth_str get_target)
create parallel_conversion dutch_lopc2
dutch_lopc2 set_source (dutch_orth_str get_target)
dutch_lopc2 set_target letter_rep





create conversion_chain caser
caser set_manual 1
caser add_link_back ortho_is_lower_f
caser add_link_back ((uplow column_rep lower) conversion_key)
caser add_link_back (uplow conversion lower upper)
caser add_link_back features_are_upper_b

create conversion_chain caser_plus
caser_plus set_manual 1
caser_plus add_link_back caser
caser_plus add_link_back (features_db conversion letter features)
((features_db column_rep letter) find_conversion (dutch_orth_str inner)) add_fallback caser

#create pattern english_pattern
#english_pattern set (dutch_vocab column_rep Language keyed_representation) English

#create pattern dutch_pattern
#dutch_pattern set (english_vocab column_rep Language keyed_representation) Dutch

create equiv_conversion dutch_lang_conv
dutch_lang_conv set_target (languages_df column_rep Language)
dutch_lang_conv set_source (dutch_vocab column_rep Language)

create equiv_conversion english_lang_conv
english_lang_conv set_target (languages_df column_rep Language)
english_lang_conv set_source (english_vocab column_rep Language)

create equiv_conversion dutch_langc2
dutch_langc2 set_source (languages_df column_rep Language)
dutch_langc2 set_target (dutch_vocab column_rep Language)

create equiv_conversion english_langc2
english_langc2 set_source (languages_df column_rep Language)
english_langc2 set_target (english_vocab column_rep Language)

##CONNECTIONS
#loglevel debug
create connection english_loc
english_loc autoconnect letters english_words

create connection dutch_loc
dutch_loc autoconnect letters dutch_words



#loc details

create connection dutch_olc
dutch_olc autoconnect dutch_words letters

create connection english_olc
english_olc autoconnect english_words letters



create connection english_langc
english_langc autoconnect english_words languages

create connection dutch_langc
dutch_langc autoconnect dutch_words languages

create connection lang_englishc
lang_englishc autoconnect languages english_words 

create connection lang_dutchc
lang_dutchc autoconnect languages dutch_words  




# ## ORTH-ORTH
create connection dutch_lato
dutch_lato autoconnect dutch_words dutch_words

create connection english_lato
english_lato autoconnect english_words english_words

# It’s certainly critical that lat_ed and lat_de are created AFTER english_loc and dutch_loc are connected 
# (or that you do a set_weight on them to increase their “length”).
create manual_conversion lat_ed 
lat_ed set_target (dutch_vocab column_rep Word keyed_representation)
lat_ed set_source (english_vocab column_rep Word keyed_representation)

create manual_conversion lat_de 
lat_de set_source (dutch_vocab column_rep Word keyed_representation)
lat_de set_target (english_vocab column_rep Word keyed_representation)

create connection english_dutch_lato
english_dutch_lato autoconnect english_words dutch_words

create connection dutch_english_lato
dutch_english_lato autoconnect dutch_words english_words 


bia define_input orthographic (dutch_vocab column_rep Word string_representation) features

dutch_words set_resting_level (dutch_vocab column_rep Rest)
english_words set_resting_level (english_vocab column_rep Rest)
languages set_resting_level (languages_df column_rep Rest)


((features_db column_rep features) find_conversion (dutch_orth_str inner)) add_fallback caser_plus
((features_db column_rep features) find_conversion (dutch_orth_str inner)) set_weight -1
