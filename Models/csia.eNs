################
# LOAD DATABASES
################

create model csiam

# ## LETTER FEATURE REPRESENTATION (CASE-SPECIFIC)
create dataframe_for_reps features_db
features_db load Databases/case_specific_letter_features_no_blank.eNd

# ## ABSTRACT LETTER UNITS
create dataframe_for_reps letters_db
letters_db load Databases/ALU_letter.eNd

# ## WORDS (CASE-SPECIFIC & ABSTRACT)
create dataframe_for_reps vocab
vocab load Databases/Vocab_files/csia.eNd

#################
# REPRESENTATIONS
#################

create representation feat_rep
feat_rep type blocked_representation
feat_rep set_element (features_db column_rep features)
feat_rep number 4

create representation cs_letter_rep
cs_letter_rep type blocked_representation
cs_letter_rep set_element (features_db column_rep letter)
cs_letter_rep number 4

create representation abstract_letter_rep
abstract_letter_rep type blocked_representation
abstract_letter_rep set_element (letters_db column_rep alu)
abstract_letter_rep number 4

#################
# LAYERS
#################

create iac_layer fl
create iac_layer slu
create iac_layer sw
create iac_layer alu
create iac_layer aw


#######################
# ASSIGN REPS TO LAYERS
#######################

fl represent feat_rep
slu represent cs_letter_rep
sw represent (vocab column_rep CSWs)
alu represent abstract_letter_rep
aw represent (vocab column_rep Word)

#############
# CONVERSIONS
#############

create parallel_conversion lfpc
lfpc set_source cs_letter_rep
lfpc set_target feat_rep

create string_split orth_str
# string_split is a conversion; it is a special conversion that generates the target representation
#   this target representation is (orth_str target)
#   (orth_str target) is a block_rep of (orth_str inner)
#   (orth_str inner) is a string_representation that is the single letters used in
#      (vocab column_rep Word string_representation)
orth_str set_blank "
orth_str set_source (vocab column_rep Word string_representation)
#   (vocab column_rep Word) == (vocab column_rep Word keyed_representation) which is a keyed_representation
#   (vocab column_rep Word string_representation) is the "dog" string_rep rather than the binary keyed_rep

create equiv_conversion alwconv
alwconv set_target (letters_db column_rep alu string_representation)
alwconv set_source (orth_str inner)

create equiv_conversion alwconv2
alwconv2 set_source (letters_db column_rep alu string_representation)
alwconv2 set_target (orth_str inner)

create parallel_conversion alwpc
alwpc set_source abstract_letter_rep
alwpc set_target (orth_str get_target)

create parallel_conversion alwpc2
alwpc set_source (orth_str get_target)
alwpc set_target abstract_letter_rep

create string_split cs_orth_str
#cs_orth_str set_blank "
cs_orth_str set_source (vocab column_rep CSWs string_representation)

create equiv_conversion clwc
clwc set_target (features_db column_rep letter string_representation)
clwc set_source (cs_orth_str inner)

create equiv_conversion clwc2
clwc2 set_target (cs_orth_str inner)
clwc2 set_source (features_db column_rep letter string_representation)

create parallel_conversion clwpc
clwpc set_source cs_letter_rep
clwpc set_target (cs_orth_str get_target)

create parallel_conversion clwpc2
clwpc set_source (cs_orth_str get_target)
clwpc set_target cs_letter_rep

create equiv_conversion cs_lequiv
cs_lequiv set_source (cs_orth_str inner)
cs_lequiv set_target (letters_db column_rep letters string_representation)

create equiv_conversion cs_lequiv2
cs_lequiv2 set_target (cs_orth_str inner)
cs_lequiv2 set_source (letters_db column_rep letters string_representation)

create parallel_conversion csalpc
csalpc set_source cs_letter_rep
csalpc set_target letter_rep

create parallel_conversion csalpc2
csalpc2 set_source letter_rep
csalpc2 set_target cs_letter_rep

#############
# CONNECTIONS
#############

create connection flc
flc autoconnect fl slu

create connection salc
salc autoconnect slu alu

create connection aslc
aslc autoconnect alu slu

create connection slwc
slwc autoconnect slu sw

create connection swlc
swlc autoconnect sw slu

create connection alwc
alwc autoconnect alu aw

create connection awlc
awlc autoconnect aw alu

create connection sawc
sawc autoconnect sw aw

create connection aswc
aswc autoconnect aw sw

create connection swlat
swlat autoconnect sw sw

create connection awlat
awlat autoconnect aw aw

create connection sllat
sllat autoconnect slu slu

create connection allat
allat autoconnect alu alu

#########################################################

# OBSERVERS

create time_observer time
time target aw


create above_threshold_observer lexical_decider
lexical_decider target aw

# SET PARAMETERS

(csiam parameters) load Databases/Parameter_Sets/CSIA/csia.eNp

aw set_resting_level (vocab column_rep Rest)
sw set_resting_level (vocab column_rep Rest)

csiam define_input orthographic (vocab column_rep CSWs string_representation) fl
csiam define_output lexical_decision lexical_decider




include Models/extras.eNs

((features_db column_rep features) find_conversion (cs_orth_str inner)) add_fallback extras
((features_db column_rep features) find_conversion (cs_orth_str inner)) set_weight -10
(feat_rep find_conversion (cs_orth_str get_target)) set_weight -2
