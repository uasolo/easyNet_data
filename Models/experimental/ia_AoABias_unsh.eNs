# LOAD LIBRARY FILES

#load conversion conversion.so
load pattern pattern.so
load representation representation.so
load conversion_chain conversion_chain.so
load keyed_representation keyed_representation.so
#load localist_pattern localist_pattern.so
load vector_representation vector_representation.so
load strength_pattern strength_pattern.so
load string_representation string_representation.so
#load string_pattern string_pattern.so
load lookup_conversion lookup_conversion.so
load key_conversion key_conversion.so
load unkey_conversion unkey_conversion.so
load connection connection.so
load layer layer.so
load dataframe dataframe.so
load observer observer.so
#load blocked_connection blocked_connection.so
load staggered_blocked_connection staggered_blocked_connection.so
#load blocked_representation blocked_representation.so
load blocks blocks.so
#load parallel_conversion parallel_conversion.so
load regex_conversion regex_conversion.so
load best_above_threshold_connection best_above_threshold_connection.so
load arbitrary_conversion_connection arbitrary_conversion_connection.so

load steps steps.so
load grouping grouping.so
load group group.so
load model model.so
#load character_split character_split.so
#load character_split_conversion character_split_conversion.so
load string_split string_split.so
load equiv_conversion equiv_conversion.so
load flatten_string_conversion flatten_string_conversion.so
load file file.so
load above_threshold_observer above_threshold_observer.so
load verbose_observer verbose_observer.so
load time_observer time_observer.so
load regex_observer regex_observer.so
load serialize_blocks_observer serialize_blocks_observer.so

load iac_layer iac_layer.so
load iac_layer_extended iac_layer_extended.so
load string_layer string_layer.so
load binary_layer binary_layer.so
load bias_layer bias_layer.so
load manual_conversion manual_conversion.so

# load summate summate_view.so
load dataframe_for_params dataframe_for_params.so
load dataframe_for_reps dataframe_for_reps.so


# LOAD DATABASES

# ## LETTER FEATURE REPRESENTATION
create dataframe_for_reps features_db
features_db load Databases/letter_features_no_blank.eNd

# ## ORTHOGRAPHY, PHONOLOGY, FREQUENCIES
create dataframe_for_reps vocab
#vocab load Databases/Vocab_files/ia.eNd
#vocab load Databases/Vocab_files/clam.eNd
vocab load Databases/Vocab_files/iaBLP.eNd


# LEXICAL ROUTE LAYERS

# ## FEATURE LAYER
create representation feat_rep
feat_rep type blocked_representation
feat_rep set_element (features_db column_rep features)
feat_rep number 4
create iac_layer feature_level
feature_level represent feat_rep

#create pattern _mask
#_mask set feat_rep 1P/0 2P/0 3P/0 4A/0 5P/0 6P/0  7A/0 8A/0 9P/0 10P/0 11A/0 12P/0 13P/0 14P/0 1P/1 2P/1 3P/1 4A/1 5P/1 6P/1 7A/1 8A/1 9P/1 10P/1 11A/1 12P/1 13P/1 14P/1 1P/2 2P/2 3P/2 4A/2 5P/2 6P/2 7A/2 8A/2 9P/2 10P/2 11A/2 12P/2 13P/2 14P/2 1P/3 2P/3 3P/3 4A/3 5P/3 6P/3 7A/3 8A/3 9P/3 10P/3 11A/3 12P/3 13P/3 14P/3

# ## LETTER LAYER
create representation letter_rep
letter_rep type blocked_representation
letter_rep set_element (features_db column_rep letter)
letter_rep number 4

create iac_layer letter_level
letter_level represent letter_rep

# ## ORTHORAPHIC LEXICON (LAYER)
create iac_layer_extended word_level
word_level represent (vocab column_rep Word)

# BIAS LAYER
create bias_layer AoAl
# AoAl represent (vocab column_rep normLogAoA)
AoAl represent (vocab column_rep normAoA)


# LEXICAL ROUTE CONNECTIONS

# ## FEATURE-LETTER
create connection flc
flc autoconnect feature_level letter_level


create parallel_conversion lfpc
lfpc set_source letter_rep
lfpc set_target feat_rep

# ## LETTER-ORTH
create string_split orth_str
orth_str set_blank "
orth_str set_source (vocab column_rep Word string_representation)
#orth_str set_min 8


#(features_db column_rep features) find_conversion (orth_str inner)

create equiv_conversion letters
letters set_target (features_db column_rep letter string_representation)
letters set_source (orth_str inner)

create equiv_conversion letters2
letters2 set_source (features_db column_rep letter string_representation)
letters2 set_target (orth_str inner)

((features_db column_rep features) find_conversion (orth_str inner)) set_auto 1


create parallel_conversion bananas
bananas set_source (orth_str get_target)
bananas set_target feat_rep


create parallel_conversion lopc
lopc set_source letter_rep
lopc set_target (orth_str get_target)

create parallel_conversion lopc2
lopc2 set_source (orth_str get_target)
lopc2 set_target letter_rep

create connection loc
loc autoconnect letter_level word_level

#loc details

create connection olc
olc autoconnect word_level letter_level


# ## ORTH-ORTH
create connection lato
lato autoconnect word_level word_level

create connection leto
leto autoconnect letter_level letter_level

# BIAS-ORTH
create connection AoAb
AoAb autoconnect AoAl word_level unshunted 


# OBSERVERS

create time_observer time
time target word_level

create verbose_observer word_act
word_act target word_level
create verbose_observer letter_act
letter_act target letter_level
create verbose_observer feature_act
feature_act target feature_level

word_act set_include_cycle_number 0
word_act set_include_labels 0
word_act set_include_layer_name 0
word_act set_include_numbers 0
word_act set_pre_text
word_act set_post_text
word_act set_sep_text ,


letter_act set_include_cycle_number 0
letter_act set_include_labels 0
letter_act set_include_layer_name 0
letter_act set_include_numbers 0
letter_act set_pre_text
letter_act set_post_text
letter_act set_sep_text ,

feature_act set_include_cycle_number 0
feature_act set_include_labels 0
feature_act set_include_layer_name 0
feature_act set_include_numbers 0
feature_act set_pre_text
feature_act set_post_text
feature_act set_sep_text ,

create above_threshold_observer lexical_decider
lexical_decider target word_level

# FILES

create file ol_file
create file ll_file
create file fl_file
create file ldt_file

ol_file file Output_files/ol_log.csv
ll_file file Output_files/ll_log.csv
fl_file file Output_files/fl_log.csv
ldt_file file Output_files/ldt_log.csv

create steps cycle
create model iam
iam add feature_level letter_level flc word_level loc olc lato leto lexical_decider time 
iam add AoAl AoAb
# SET PARAMETERS

create dataframe_for_params ps
ps load Databases/Parameters/IA_AoABias/ia_AoABias.eNp

iam parameter_source ps

word_level set_resting_level (vocab column_rep Rest)
#word_level set_resting_level (vocab column_rep zero)

# CREATE CYCLE TO RUN THE MODEL
cycle add iam step
cycle add ol_file write_keep_open word_act
cycle add ll_file write_keep_open  letter_act
cycle add fl_file write_keep_open  feature_act

create pattern rk_letter
rk_letter set (orth_str inner) *

create pattern rk_feats
rk_feats set (features_db column_rep features) 2P 3A 4A 7P 9P 10A 11A 12P 13A 14A

create pattern mask_letter
mask_letter set (orth_str inner) #

create pattern mask_feats
mask_feats set (features_db column_rep features) 1P 2P 3P 4A 5P 6P 7A 8A 9P 10P 11A 12P 13P 14P

create pattern blank_letter
blank_letter set (orth_str inner) _

create pattern blank_feats
blank_feats set (features_db column_rep features)

create pattern comma
comma set (orth_str inner) ,

create manual_conversion extras
extras set_auto_use 0
extras set_source (orth_str inner)
extras set_target (features_db column_rep features)
extras add rk_letter rk_feats
extras add mask_letter mask_feats
extras add blank_letter blank_feats

((features_db column_rep features) find_conversion (orth_str inner)) add_fallback extras

create pattern _mask
_mask set (vocab column_rep Word string_representation) ####
#feat_rep 1P/0 2P/0 3P/0 4A/0 5P/0 6P/0  7A/0 8A/0 9P/0 10P/0 11A/0 12P/0 13P/0 14P/0 1P/1 2P/1 3P/1 4A/1 5P/1 6P/1 7A/1 8A/1 9P/1 10P/1 11A/1 12P/1 13P/1 14P/1 1P/2 2P/2 3P/2 4A/2 5P/2 6P/2 7A/2 8A/2 9P/2 10P/2 11A/2 12P/2 13P/2 14P/2 1P/3 2P/3 3P/3 4A/3 5P/3 6P/3 7A/3 8A/3 9P/3 10P/3 11A/3 12P/3 13P/3 14P/3

create pattern blank


# set some simulation parameters
#ps set rate 0.1 
#ps set letter_decay 0.007 
#ps set orth_decay 0.007 
#ps set ldt 0.75
#ps set AoA_bias 0.005


